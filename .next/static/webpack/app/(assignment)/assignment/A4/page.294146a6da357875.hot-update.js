"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(assignment)/assignment/A4/page",{

/***/ "(app-pages-browser)/./src/app/(assignment)/assignment/A4/page.tsx":
/*!*****************************************************!*\
  !*** ./src/app/(assignment)/assignment/A4/page.tsx ***!
  \*****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ XPBDRopePage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @react-three/fiber */ \"(app-pages-browser)/./node_modules/@react-three/fiber/dist/events-321b05fb.esm.js\");\n/* harmony import */ var _react_three_fiber__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @react-three/fiber */ \"(app-pages-browser)/./node_modules/@react-three/fiber/dist/react-three-fiber.esm.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! three */ \"(app-pages-browser)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var _shaders_common_vertex_glsl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/shaders/common/vertex.glsl */ \"(app-pages-browser)/./src/shaders/common/vertex.glsl\");\n/* harmony import */ var _fragment_final_glsl__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fragment_final.glsl */ \"(app-pages-browser)/./src/app/(assignment)/assignment/A4/fragment_final.glsl\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n // Simple vertex shader\n // Fragment shader\nconst XPBDRope = (param)=>{\n    let { dpr } = param;\n    _s();\n    const { viewport, gl, scene, camera } = (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_4__.D)();\n    const uniforms = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({\n        iTime: {\n            value: 0\n        },\n        iTimeDelta: {\n            value: 0\n        },\n        iFrame: {\n            value: 0\n        },\n        iResolution: {\n            value: new three__WEBPACK_IMPORTED_MODULE_5__.Vector2(window.innerWidth * dpr, window.innerHeight * dpr)\n        },\n        iMouse: {\n            value: new three__WEBPACK_IMPORTED_MODULE_5__.Vector4(0, 0, 0, 0)\n        },\n        iChannel0: {\n            value: new three__WEBPACK_IMPORTED_MODULE_5__.Texture()\n        }\n    }).current;\n    // Create double-buffered RenderTarget\n    const renderTargets = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([\n        new three__WEBPACK_IMPORTED_MODULE_5__.WebGLRenderTarget(window.innerWidth * dpr, window.innerHeight * dpr, {\n            minFilter: three__WEBPACK_IMPORTED_MODULE_5__.NearestFilter,\n            magFilter: three__WEBPACK_IMPORTED_MODULE_5__.NearestFilter,\n            format: three__WEBPACK_IMPORTED_MODULE_5__.RGBAFormat,\n            type: three__WEBPACK_IMPORTED_MODULE_5__.FloatType\n        }),\n        new three__WEBPACK_IMPORTED_MODULE_5__.WebGLRenderTarget(window.innerWidth * dpr, window.innerHeight * dpr, {\n            minFilter: three__WEBPACK_IMPORTED_MODULE_5__.NearestFilter,\n            magFilter: three__WEBPACK_IMPORTED_MODULE_5__.NearestFilter,\n            format: three__WEBPACK_IMPORTED_MODULE_5__.RGBAFormat,\n            type: three__WEBPACK_IMPORTED_MODULE_5__.FloatType\n        })\n    ]).current;\n    const bufferIndex = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);\n    let lastTime = performance.now(); // Record the time of the previous frame\n    (0,_react_three_fiber__WEBPACK_IMPORTED_MODULE_4__.F)(()=>{\n        const now = performance.now();\n        uniforms.iTimeDelta.value = (now - lastTime) / 1000; // Compute delta time in seconds\n        lastTime = now;\n        uniforms.iTime.value += uniforms.iTimeDelta.value;\n        uniforms.iFrame.value++; // Increment frame counter\n        uniforms.iResolution.value.set(window.innerWidth * dpr, window.innerHeight * dpr);\n        //console.log('Frame:', uniforms.iFrame.value);\n        //console.log('Time:', uniforms.iTime.value);\n        // Set the current frame input texture (using the other RenderTarget)\n        uniforms.iChannel0.value = renderTargets[1 - bufferIndex.current].texture;\n        gl.setRenderTarget(renderTargets[bufferIndex.current]);\n        gl.render(scene, camera);\n        gl.setRenderTarget(null); // Switch back to the default framebuffer\n        // Swap buffers\n        bufferIndex.current = 1 - bufferIndex.current;\n    });\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleMouseMove = (event)=>{\n            uniforms.iMouse.value.x = event.clientX * dpr;\n            uniforms.iMouse.value.y = (window.innerHeight - event.clientY) * dpr; // Flip Y-axis\n        };\n        const handleMouseDown = (event)=>{\n            if (event.button === 0) {\n                uniforms.iMouse.value.z = 1; // 左键按下\n            }\n        };\n        const handleMouseUp = (event)=>{\n            if (event.button === 0) {\n                uniforms.iMouse.value.z = 0; // 左键释放\n            } else if (event.button === 2) {\n                uniforms.iMouse.value.z = 2; // 右键释放的瞬间\n                requestAnimationFrame(()=>{\n                    uniforms.iMouse.value.z = 0; // 下一帧恢复为 0\n                });\n            }\n        };\n        window.addEventListener(\"mousemove\", handleMouseMove);\n        window.addEventListener(\"mousedown\", handleMouseDown);\n        window.addEventListener(\"mouseup\", handleMouseUp);\n        window.addEventListener(\"contextmenu\", (e)=>e.preventDefault()); // 阻止右键菜单\n        return ()=>{\n            window.removeEventListener(\"mousemove\", handleMouseMove);\n            window.removeEventListener(\"mousedown\", handleMouseDown);\n            window.removeEventListener(\"mouseup\", handleMouseUp);\n        };\n    }, [\n        dpr\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"mesh\", {\n        scale: [\n            viewport.width,\n            viewport.height,\n            1\n        ],\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"planeGeometry\", {\n                args: [\n                    1,\n                    1\n                ]\n            }, void 0, false, {\n                fileName: \"/Users/bir/code/cgai_final/CGA-Final/src/app/(assignment)/assignment/A4/page.tsx\",\n                lineNumber: 103,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"shaderMaterial\", {\n                fragmentShader: _fragment_final_glsl__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n                vertexShader: _shaders_common_vertex_glsl__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n                uniforms: uniforms\n            }, void 0, false, {\n                fileName: \"/Users/bir/code/cgai_final/CGA-Final/src/app/(assignment)/assignment/A4/page.tsx\",\n                lineNumber: 104,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/bir/code/cgai_final/CGA-Final/src/app/(assignment)/assignment/A4/page.tsx\",\n        lineNumber: 102,\n        columnNumber: 5\n    }, undefined);\n};\n_s(XPBDRope, \"e8OySB1Ty5yM23xsuElxkkKaiAI=\", false, function() {\n    return [\n        _react_three_fiber__WEBPACK_IMPORTED_MODULE_4__.D,\n        _react_three_fiber__WEBPACK_IMPORTED_MODULE_4__.F\n    ];\n});\n_c = XPBDRope;\nfunction XPBDRopePage() {\n    const dpr = 1;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_react_three_fiber__WEBPACK_IMPORTED_MODULE_6__.Canvas, {\n        dpr: dpr,\n        orthographic: true,\n        camera: {\n            position: [\n                0,\n                0,\n                6\n            ]\n        },\n        style: {\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100vw\",\n            height: \"100vh\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n            fallback: null,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(XPBDRope, {\n                dpr: dpr\n            }, void 0, false, {\n                fileName: \"/Users/bir/code/cgai_final/CGA-Final/src/app/(assignment)/assignment/A4/page.tsx\",\n                lineNumber: 129,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/bir/code/cgai_final/CGA-Final/src/app/(assignment)/assignment/A4/page.tsx\",\n            lineNumber: 128,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/bir/code/cgai_final/CGA-Final/src/app/(assignment)/assignment/A4/page.tsx\",\n        lineNumber: 116,\n        columnNumber: 5\n    }, this);\n}\n_c1 = XPBDRopePage;\nvar _c, _c1;\n$RefreshReg$(_c, \"XPBDRope\");\n$RefreshReg$(_c1, \"XPBDRopePage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/(assignment)/assignment/A4/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/(assignment)/assignment/A4/fragment_final.glsl":
/*!****************************************************************!*\
  !*** ./src/app/(assignment)/assignment/A4/fragment_final.glsl ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"precision highp float;\\n#define GLSLIFY 1\\nvarying vec2 vUv;\\n\\nuniform float iTime;\\nuniform float iTimeDelta;\\nuniform float iFrame;\\nuniform vec2  iResolution;\\nuniform vec4  iMouse;\\nuniform sampler2D iChannel0; // previous frame state\\n\\n// ------------------------------------------------------------------------\\n// 1) YOUR ORIGINAL PBD SIMULATION (2D) -----------------------------------\\n// ------------------------------------------------------------------------\\n\\nfloat remap01(float inp, float a, float b) {\\n    return clamp((inp - a) / (b - a), 0.0, 1.0);\\n}\\nfloat dist_sqr(vec2 A, vec2 B) {\\n    vec2 d = A - B;\\n    return dot(d,d);\\n}\\n\\nconst float RADIUS = 0.015;\\nconst float damp = 2.0;\\nconst float collision_dist = RADIUS * 1.5;\\nconst float ground_collision_dist = collision_dist * 0.1;\\nconst vec2 gravity = vec2(0.0, -1.0);\\nconst float PI = 3.14159265359;\\n\\nstruct Particle { vec2 pos, pos_prev, vel; float inv_mass; bool fixed; };\\nstruct Spring   { int a, b; float restLength, inv_stiffness; };\\n\\nconst int MAX_PARTICLES = 100;\\nconst int MAX_SPRINGS   =  40;\\nconst int initial_particles = 40;\\n\\nint   n_particles, n_springs, selected_particle, current_add_particle;\\nParticle particles[MAX_PARTICLES];\\nSpring   springs[MAX_SPRINGS];\\n\\nSpring add_spring(int a, int b, float inv_k) {\\n    Spring s;\\n    s.a = a; s.b = b;\\n    s.restLength = length(particles[a].pos - particles[b].pos);\\n    s.inv_stiffness = inv_k;\\n    return s;\\n}\\n\\nvec2 screen_to_xy(vec2 uv) {\\n    return (uv - 0.5 * iResolution.xy) * 2.0 / iResolution.y;\\n}\\nbool is_init() {\\n    return (iTime < 0.06) || (iFrame < 2.0);\\n}\\n\\nvoid init_state() {\\n    n_particles = initial_particles;\\n    n_springs   = initial_particles - 1;\\n    float xs = -0.9, xe = -0.3, ys =  0.4, ye = -0.3;\\n    for(int i=1;i<initial_particles;i++){\\n        float t = float(i-1)/float(initial_particles-2);\\n        particles[i].pos = mix(vec2(xs,ys), vec2(xe,ye), t);\\n        particles[i].vel = vec2(0.0);\\n        particles[i].inv_mass = (i==1||i==initial_particles-1)?0.0:1.0;\\n        particles[i].fixed    = (i==1||i==initial_particles-1);\\n    }\\n    current_add_particle = initial_particles;\\n    for(int i=1;i<initial_particles-1;i++){\\n        springs[i] = add_spring(i, i+1, 1.0/80000.0);\\n    }\\n}\\n\\nint nearest_particle(vec2 p){\\n    int idx=1; float md=1e9;\\n    for(int i=1;i<n_particles;i++){\\n        float d = dist_sqr(p, particles[i].pos);\\n        if(d<md){ md=d; idx=i; }\\n    }\\n    return idx;\\n}\\n\\nvoid load_state(){\\n    // (0,0) holds: n_particles, n_springs, selected, current_add\\n    vec4 d00 = texelFetch(iChannel0, ivec2(0,0),0);\\n    n_particles       = int(d00.x);\\n    n_springs         = int(d00.y);\\n    selected_particle = int(d00.z);\\n    current_add_particle = int(d00.w);\\n\\n    // mouse particle at idx=0\\n    particles[0].pos       = screen_to_xy(iMouse.xy);\\n    particles[0].vel       = vec2(0.0);\\n    particles[0].inv_mass  = 0.0;\\n    particles[0].fixed     = true;\\n\\n    // load other particles\\n    for(int i=1;i<n_particles;i++){\\n        vec4 d = texelFetch(iChannel0, ivec2(i,0),0);\\n        particles[i].pos      = d.xy;\\n        particles[i].vel      = d.zw;\\n        particles[i].inv_mass = 1.0;\\n        particles[i].fixed    = false;\\n        if(i==1||i==initial_particles-1){\\n            particles[i].inv_mass = 0.0;\\n            particles[i].fixed    = true;\\n        }\\n    }\\n\\n    // spring[0] = mouse to selected\\n    springs[0] = add_spring(0, selected_particle, 1.0/100.0);\\n\\n    // load rest\\n    for(int i=1;i<n_springs;i++){\\n        vec4 d = texelFetch(iChannel0, ivec2(i,1),0);\\n        springs[i].a = int(d.x);\\n        springs[i].b = int(d.y);\\n        springs[i].restLength   = d.z;\\n        springs[i].inv_stiffness= d.w;\\n    }\\n\\n    // pick/drag logic\\n    if(iMouse.z==1.0){\\n        if(selected_particle<0){\\n            selected_particle = nearest_particle(particles[0].pos);\\n        }\\n    } else selected_particle = -1;\\n\\n    if(iMouse.z==2.0 && selected_particle>=0){\\n        // add a new spring from selected to a new particle\\n        if(current_add_particle<MAX_PARTICLES){\\n            particles[current_add_particle].pos      = screen_to_xy(iMouse.xy);\\n            particles[current_add_particle].vel      = vec2(0.0);\\n            particles[current_add_particle].inv_mass = 1.0;\\n            particles[current_add_particle].fixed    = false;\\n            n_particles = max(n_particles, current_add_particle+1);\\n            springs[n_springs++] = add_spring(selected_particle, current_add_particle, 1.0/80000.0);\\n            current_add_particle++;\\n        }\\n    }\\n}\\n\\nfloat spring_C(Spring s){\\n    return length(particles[s.a].pos - particles[s.b].pos) - s.restLength;\\n}\\nvec2 grad_C(vec2 a, vec2 b){\\n    vec2 d = a-b; float L=length(d);\\n    return (L<1e-6) ? vec2(0.0) : d/L;\\n}\\nvec2 spring_grad(Spring s, int idx){\\n    vec2 g = grad_C(particles[s.a].pos, particles[s.b].pos);\\n    return (idx==s.a ? +g : -g);\\n}\\nvoid solve_spring(Spring s, float dt){\\n    float C = spring_C(s);\\n    vec2 ga = spring_grad(s, s.a);\\n    vec2 gb = spring_grad(s, s.b);\\n    float invMa = particles[s.a].inv_mass * dot(ga,ga);\\n    float invMb = particles[s.b].inv_mass * dot(gb,gb);\\n    float denom = invMa+invMb + s.inv_stiffness/(dt*dt);\\n    if(denom<1e-6) return;\\n    float λ = -C/denom;\\n    particles[s.a].pos += λ * particles[s.a].inv_mass * ga;\\n    particles[s.b].pos += λ * particles[s.b].inv_mass * gb;\\n}\\n\\nfloat col_C(vec2 a, vec2 b){\\n    float d=length(a-b);\\n    return (d<collision_dist) ? (d-collision_dist) : 0.0;\\n}\\nvec2 col_grad(vec2 a, vec2 b){\\n    return (a==b) ? vec2(0.0) : normalize(a-b);\\n}\\nvoid solve_collision(int i,int j,float dt){\\n    vec2 a=particles[i].pos, b=particles[j].pos;\\n    vec2 g = col_grad(a,b);\\n    if(length(g)<1e-6) return;\\n    float C = col_C(a,b);\\n    float invMi = particles[i].inv_mass * dot(g,g);\\n    float invMj = particles[j].inv_mass * dot(g,g);\\n    float denom = invMi+invMj + 1.0/1000.0/(dt*dt);\\n    float λ = -C/denom;\\n    particles[i].pos += λ * particles[i].inv_mass * g;\\n    particles[j].pos -= λ * particles[j].inv_mass * g;\\n}\\n\\nfloat φ2d(vec2 p){\\n    return p.y - (0.1*sin(p.x*2.0*PI) - 0.5);\\n}\\nfloat ground_C(vec2 p){\\n    float v = φ2d(p);\\n    return (v<ground_collision_dist) ? (v-ground_collision_dist) : 0.0;\\n}\\nvec2 ground_grad(vec2 p){\\n    float gx = -0.2*PI*cos(2.0*PI*p.x);\\n    return vec2(gx,1.0);\\n}\\nvoid solve_ground(int i,float dt){\\n    vec2 p = particles[i].pos;\\n    vec2 g = ground_grad(p);\\n    float C = ground_C(p);\\n    float denom = particles[i].inv_mass*dot(g,g) + 1.0/1000.0/(dt*dt);\\n    float λ = -C/denom;\\n    particles[i].pos += λ * particles[i].inv_mass * g;\\n}\\n\\nvoid solve_all(float dt){\\n    if(iMouse.z==1.0) solve_spring(springs[0], dt);\\n    for(int i=1;i<n_springs;i++) solve_spring(springs[i], dt);\\n    for(int i=1;i<n_particles;i++){\\n        for(int j=i+1;j<n_particles;j++) solve_collision(i,j,dt);\\n    }\\n    for(int i=1;i<n_particles;i++) solve_ground(i,dt);\\n}\\n\\nvoid simulate(){\\n    float dt = min(iTimeDelta,0.02) / 5.0;\\n    for(int s=0;s<5;s++){\\n        for(int i=0;i<n_particles;i++){\\n            if(!particles[i].fixed){\\n                particles[i].vel += dt*gravity;\\n                particles[i].vel *= exp(-damp*dt);\\n            }\\n            particles[i].pos_prev = particles[i].pos;\\n            particles[i].pos += dt * particles[i].vel;\\n        }\\n        solve_all(dt);\\n        for(int i=0;i<n_particles;i++){\\n            if(!particles[i].fixed)\\n                particles[i].vel = (particles[i].pos - particles[i].pos_prev)/dt;\\n        }\\n        particles[0].pos = screen_to_xy(iMouse.xy); // keep mouse fixed\\n    }\\n}\\n\\n// ------------------------------------------------------------------------\\n// 2) A 3D SDF SCENE & PHONG SHADING --------------------------------------\\n// ------------------------------------------------------------------------\\n\\n// capsule SDF between A,B with radius r\\nfloat sdCapsule(vec3 p, vec3 A, vec3 B, float r){\\n    vec3 pa = p - A;\\n    vec3 ba = B - A;\\n    float h = clamp(dot(pa,ba)/dot(ba,ba), 0.0, 1.0);\\n    return length(pa - ba*h) - r;\\n}\\n// sphere SDF\\nfloat sdSphere(vec3 p, vec3 C, float r){\\n    return length(p-C) - r;\\n}\\n// wavy ground plane\\nfloat sdGround(vec3 p){\\n    float w = 0.1 * sin(p.x*2.0*PI) - 0.5;\\n    return p.y - w;\\n}\\n\\n// scene SDF: ground ∪ fluid spheres ∪ rope capsules\\nfloat sceneSDF(vec3 p){\\n    float d = sdGround(p);\\n\\n    // fluid particles as spheres\\n    for(int i=initial_particles;i<n_particles;i++){\\n        vec3 pc = vec3(particles[i].pos, 0.0);\\n        d = min(d, sdSphere(p, pc, RADIUS));\\n    }\\n    // rope springs as capsules\\n    for(int i=1;i<n_springs;i++){\\n        vec3 A = vec3(particles[springs[i].a].pos, 0.0);\\n        vec3 B = vec3(particles[springs[i].b].pos, 0.0);\\n        d = min(d, sdCapsule(p, A, B, RADIUS*0.6));\\n    }\\n    // mouse–first spring link\\n    {\\n        vec3 A = vec3(particles[0].pos,0.0);\\n        vec3 B = vec3(particles[selected_particle].pos,0.0);\\n        d = min(d, sdCapsule(p, A, B, RADIUS*0.6));\\n    }\\n\\n    return d;\\n}\\n\\n// ray direction from camera\\nvec3 rayDir(vec2 uv){\\n    vec2 p = (uv - 0.5)*2.0;\\n    p.x *= iResolution.x/iResolution.y;\\n    return normalize(vec3(p, -1.0));\\n}\\n\\n// ray march\\nvec3 rayMarch(vec3 ro, vec3 rd){\\n    float t = 0.0;\\n    for(int i=0;i<128;i++){\\n        vec3 pos = ro + rd * t;\\n        float d = sceneSDF(pos);\\n        if(d<0.001) return pos;\\n        if(t>50.0) break;\\n        t += d;\\n    }\\n    return vec3(0.0, -1.0, 0.0); // miss: below ground\\n}\\n\\n// normal via numeric gradient\\nvec3 estimateNormal(vec3 p){\\n    float h = 0.0005;\\n    return normalize(vec3(\\n        sceneSDF(p + vec3(h,0,0)) - sceneSDF(p - vec3(h,0,0)),\\n        sceneSDF(p + vec3(0,h,0)) - sceneSDF(p - vec3(0,h,0)),\\n        sceneSDF(p + vec3(0,0,h)) - sceneSDF(p - vec3(0,0,h))\\n    ));\\n}\\n\\n// Phong shading\\nvec3 phong(vec3 p, vec3 ro, vec3 N){\\n    vec3 lightPos = vec3(2.0,2.0,2.0);\\n    vec3 L = normalize(lightPos - p);\\n    vec3 V = normalize(ro - p);\\n    vec3 H = normalize(L+V);\\n    float diff = max(dot(N,L),0.0);\\n    float spec = pow(max(dot(N,H),0.0), 64.0);\\n    vec3 ambient = vec3(0.1);\\n    vec3 base    = vec3(0.4,0.7,1.0);\\n    return ambient + diff*base + spec*vec3(1.0);\\n}\\n\\n// ------------------------------------------------------------------------\\n// 3) MAIN: PACK SIM & RENDER ---------------------------------------------\\n// ------------------------------------------------------------------------\\nvoid main(){\\n    vec2 pix = vUv * iResolution.xy;\\n    int i = int(pix.x);\\n    int j = int(pix.y);\\n\\n    // --- row 0: particles state ---  \\n    if(j==0){\\n        if(i==0){\\n            gl_FragColor = vec4(\\n                float(n_particles),\\n                float(n_springs),\\n                float(selected_particle),\\n                float(current_add_particle)\\n            );\\n        }\\n        else if(i < n_particles){\\n            Particle P = particles[i];\\n            gl_FragColor = vec4(P.pos, P.vel);\\n        } else {\\n            gl_FragColor = vec4(0.0,0.0,0.0,1.0);\\n        }\\n        return;\\n    }\\n\\n    // --- row 1: springs state ---\\n    if(j==1){\\n        if(i < n_springs){\\n            Spring s = springs[i];\\n            gl_FragColor = vec4(\\n                float(s.a), float(s.b),\\n                s.restLength, s.inv_stiffness\\n            );\\n        } else {\\n            gl_FragColor = vec4(0.0,0.0,0.0,1.0);\\n        }\\n        return;\\n    }\\n\\n    // --- all other rows: do sim + render ---\\n    if(is_init()){\\n        init_state();\\n    } else {\\n        load_state();\\n        simulate();\\n    }\\n\\n    // map pixel to [0,1] in the render region offset by 2 scanlines\\n    float H = iResolution.y - 2.0;\\n    vec2 uv = vec2(\\n        pix.x / iResolution.x,\\n        (pix.y - 2.0) / H\\n    );\\n\\n    // camera setup\\n    vec3 ro = vec3(0.0, 0.0, 5.0);\\n    vec3 rd = rayDir(uv);\\n\\n    vec3 hit = rayMarch(ro, rd);\\n    vec3 N   = estimateNormal(hit);\\n    vec3 col = phong(hit, ro, N);\\n\\n    gl_FragColor = vec4(col,1.0);\\n}\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/(assignment)/assignment/A4/fragment_final.glsl\n"));

/***/ })

});